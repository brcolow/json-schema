name: sonar
on:
  workflow_run:
    workflows: [tests]
    types: [completed]
jobs:
  get-info:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    outputs:
      sourceHeadBranch: ${{ steps.workflow-run-info.outputs.sourceHeadBranch }}
      sourceHeadSha: ${{ steps.workflow-run-info.outputs.sourceHeadSha }}
      pullRequestNumber: ${{ steps.workflow-run-info.outputs.pullRequestNumber }}
    steps:
      - name: Get information about the source workflow
        uses: potiuk/get-workflow-origin@v1
        id: workflow-run-info
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

  sonar-cloud:
    if: github.event.workflow_run.conclusion == 'success'
    needs: get-info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: Download code coverage
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: tests.yml
          commit: ${{ github.event.workflow_run.head_sha }}
          name: report-output
          path: build/reports

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ vars.JAVA_VENDOR }}
          java-version: ${{ vars.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper

      - name: SonarCloud analyze master
        if: needs.get-info.outputs.pullRequestNumber == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --info

      - name: SonarCloud analyze PR
        if: needs.get-info.outputs.pullRequestNumber != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./gradlew sonar --info
          -Dsonar.scm.revision=${{ needs.get-info.outputs.sourceHeadSha }}
          -Dsonar.pullrequest.key=${{ needs.get-info.outputs.pullRequestNumber }}
          -Dsonar.pullrequest.branch=${{ needs.get-info.outputs.sourceHeadBranch }}
          -Dsonar.pullrequest.base=master