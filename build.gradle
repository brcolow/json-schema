plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

apply from: 'setup/publishing.gradle'
apply from: 'setup/reporting.gradle'
apply from: 'setup/testing.gradle'

group 'dev.harrel'
version '1.4.3'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.compilerArgs.addAll(['--release', '8'])
}

java {
    sourceCompatibility JavaVersion.VERSION_21
    targetCompatibility JavaVersion.VERSION_21
    withSourcesJar()
    withJavadocJar()
    javadoc.options.addStringOption('Xdoclint:none', '-quiet')
}

repositories {
    mavenCentral()
}

def jsonProviders = [
        jackson    : 'com.fasterxml.jackson.core:jackson-databind:2.15.3',
        gson       : 'com.google.code.gson:gson:2.10.1',
        orgJson    : 'org.json:json:20231013',
        jettison   : 'org.codehaus.jettison:jettison:1.5.4',
        jakartaJson: 'jakarta.json:jakarta.json-api:2.1.3',
        jsonSmart  : 'net.minidev:json-smart:2.5.0'
]

jsonProviders.entrySet().forEach {
    java.registerFeature(it.key, {
        usingSourceSet(sourceSets.main)
    })
    dependencies.add("${it.key}Implementation", it.value)
    setupProviderTest(it.key, it.value)
}

dependencies {
    testImplementation 'org.eclipse.parsson:parsson:1.1.5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

test {
    useJUnitPlatform()
}